( JMP,  0,  3 ) // 階乗計算 入力値の階乗の値を出力する
( LAB,  0,  1 ) // function
( INT,  0,  3 ) // sp.bp
( LOD,  0, -1 ) // 引数nを読み込み
( LIT,  0,  1 ) // 定数
( OPR,  0, 10 ) // p < q  ... n<1
( JPC,  0,  2 ) 
( LIT,  0,  1 ) // n=0なら 1を返す
( RET,  0,  1 )
( LAB,  0,  2 ) // 条件分岐ラベル
( LOD,  0, -1 ) // 引数nを読み込み
( LOD,  0, -1 ) // 引数nを読み込み
( LIT,  0,  1 ) // 定数
( OPR,  0,  3 ) // p-q ... n-1
( CAL,  1,  1 ) // fをcall
( OPR,  0,  4 ) // p*q
( RET,  0,  1 ) 
( OPR,  0,  0 ) // exit
( LAB,  0,  3 ) // ここからスタート
( INT,  0,  4 ) // sp,bp
( CSP,  0,  0 ) // read
( STO,  0,  3 ) // メモリ書き込み
( LOD,  0,  3 ) // readedをスタックに積んで引数として
( CAL,  0,  1 ) 
( CSP,  0,  1 ) // write
( CSP,  0,  2 ) 
( OPR,  0,  0 ) 